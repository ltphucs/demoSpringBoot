# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/bootdemo1
# Username and password
#spring.datasource.username =root
#spring.datasource.password = 1qaz0plm
#spring.datasource.url=jdbc:postgresql://localhost:5432/demo
spring.datasource.url=jdbc:postgres://crypusampmcgzf:4ab187ef214fea514f739314f237ce1fa4f2746bc3b37e8a8a15c6325de27692@ec2-34-200-72-77.compute-1.amazonaws.com:5432/d74pi0m45eeihp
#spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.datasource.username=crypusampmcgzf
spring.datasource.password=4ab187ef214fea514f739314f237ce1fa4f2746bc3b37e8a8a15c6325de27692

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
