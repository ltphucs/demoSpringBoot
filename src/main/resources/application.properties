# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/bootdemo1
# Username and password
#spring.datasource.username =root
#spring.datasource.password = 1qaz0plm
#spring.datasource.url=jdbc:postgresql://localhost:5432/demo
spring.datasource.url=jdbc:postgres://aljkwgwchpzngp:fe755f8977a1adad2b2f9a470598f8321ba7d1d5292d74be0a73107a41ce9b32@ec2-35-171-31-33.compute-1.amazonaws.com:5432/ddldthg1jr4m61
#spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.datasource.username=aljkwgwchpzngp
spring.datasource.password=fe755f8977a1adad2b2f9a470598f8321ba7d1d5292d74be0a73107a41ce9b32

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect